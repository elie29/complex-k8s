services:
  - docker

cache:
  directories:
    - '$HOME/google-cloud-sdk/'

env:
  global:
    # Do not prompt for user input when using any SDK methods.
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
  - openssl aes-256-cbc -K $encrypted_0c35eebf403c_key -iv $encrypted_0c35eebf403c_iv -in service-account.json.enc -out service-account.json -d
  - gcloud version || true
  # install gcloud if not already installed
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf "$HOME/google-cloud-sdk"; curl https://sdk.cloud.google.com | bash > /dev/null; fi
  # Add gcloud to $PATH
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud version
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file service-account.json
  - gcloud container clusters get-credentials standard-cluster-1 --zone us-central1-a --project kubernetes-udemy-264217
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker build -t elie29/react-test:latest -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true elie29/react-test:latest npm run test
  - echo "$SHA"

after_success:
  # build production images: Continuous Integration (CInt) phase
  - docker build -t elie29/client:latest -t elie29/client:$SHA ./client
  - docker build -t elie29/server:latest -t elie29/server:$SHA ./server
  - docker build -t elie29/worker:latest -t elie29/worker:$SHA ./worker
  # Continuous Delivery (CDel) Phase
  ## Take those images and push them to docker hub
  - docker push elie29/client:latest
  - docker push elie29/server:latest
  - docker push elie29/worker:latest
  - docker push elie29/client:$SHA
  - docker push elie29/server:$SHA
  - docker push elie29/worker:$SHA

# Continuous Deployment (CDep) when merge to master or master changed
deploy:
  provider: script
  script: bash deploy.sh
  on:
    branch: master

notifications:
  email:
    on_success: never
